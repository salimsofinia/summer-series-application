<!-- <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Upload Excel</title>
    <script src="https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js"></script>
  </head>
  <body>
    <h1>Upload Excel File</h1>
    <input type="file" id="fileInput" />
    <button id="processBtn">Process File</button>
    <pre id="output"></pre>

    <script>
      let participants = [];

      function updateParticipants(data) {
        participants = data.map((row) => ({
          "O/all Pos": row["O/all Pos"] ?? null,
          "Cat Pos": row["Cat Pos"] ?? null,
          Time: row.Time ?? null,
          "Race Nr": row["Race Nr"] ?? null,
          Name: row.Name ?? null,
          Surname: row.Surname ?? null,
          Team: row.Team ?? null,
        }));
        console.log("Updated Participants Array:", participants);
      }

      document.getElementById("processBtn").addEventListener("click", () => {
        const fileInput = document.getElementById("fileInput");
        if (!fileInput.files.length) {
          alert("Please select a file first.");
          return;
        }

        const file = fileInput.files[0];
        const reader = new FileReader();

        reader.onload = function (event) {
          const data = new Uint8Array(event.target.result);
          const workbook = XLSX.read(data, { type: "array" });
          const firstSheet = workbook.Sheets[workbook.SheetNames[0]];

          // Convert the sheet to JSON
          const participantsData = XLSX.utils.sheet_to_json(firstSheet);

          // Display data and update the array
          document.getElementById("output").textContent = JSON.stringify(
            participantsData,
            null,
            2
          );
          updateParticipants(participantsData);
        };

        reader.readAsArrayBuffer(file);
      });
    </script>
  </body>
</html> -->

<!-- <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Race Time Manager</title>
  </head>
  <body>
    <h1>Race Time Manager</h1> -->

<!-- Upload XLSX File -->
<!-- <form action="/upload" method="post" enctype="multipart/form-data">
      <label for="file">Upload XLSX file:</label>
      <input type="file" name="file" id="file" accept=".xlsx" required />
      <button type="submit">Upload</button>
    </form> -->

<!-- Display JSON Array -->
<!-- <h2>Race Data</h2>
    <table border="1">
      <thead>
        <tr>
          <th>O/all Pos</th>
          <th>Cat Pos</th>
          <th>Time</th>
          <th>Race Nr</th>
          <th>Name</th>
          <th>Surname</th>
          <th>Team</th>
        </tr>
      </thead>
      <tbody>
        <% jsonArray.forEach((entry) => { %>
        <tr>
          <td><%= entry['O/all Pos'] %></td>
          <td><%= entry['Cat Pos'] %></td>
          <td><%= entry['Time'] %></td>
          <td><%= entry['Race Nr'] %></td>
          <td><%= entry['Name'] %></td>
          <td><%= entry['Surname'] %></td>
          <td><%= entry['Team'] %></td>
        </tr>
        <% }) %>
      </tbody>
    </table> -->

<!-- Capture Time -->
<!-- <h2>Capture Time</h2>
    <form action="/capture" method="post">
      <label for="raceNr">Race Nr:</label>
      <input type="text" name="raceNr" id="raceNr" required />
      <label for="time">Time:</label>
      <input type="text" name="time" id="time" required />
      <button type="submit">Capture</button>
    </form> -->

<!-- Download Updated XLSX -->
<!-- <h2>Download Updated File</h2>
    <form action="/download" method="get">
      <button type="submit">Download</button>
    </form>
  </body>
</html> -->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Race Time Manager</title>
    <script>
      // Save the timestamp as a cookie
      function setCookie(name, value, days) {
        const date = new Date();
        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
        document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;
      }

      // Retrieve the cookie value
      function getCookie(name) {
        const cookies = document.cookie.split(";");
        for (let i = 0; i < cookies.length; i++) {
          const cookie = cookies[i].trim();
          if (cookie.startsWith(`${name}=`)) {
            return cookie.substring(name.length + 1);
          }
        }
        return null;
      }

      let startTime = null;

      // Start the timer and save the timestamp as a cookie
      function startTimer() {
        startTime = new Date();
        setCookie("startTime", startTime.toISOString(), 1); // Store for 1 day
        document.getElementById(
          "timerStatus"
        ).innerText = `Timer started at: ${startTime.toLocaleTimeString()}`;
      }

      // On page load, check if the timer cookie exists
      window.onload = function () {
        const savedStartTime = getCookie("startTime");
        if (savedStartTime) {
          startTime = new Date(savedStartTime);
          document.getElementById(
            "timerStatus"
          ).innerText = `Timer resumed from: ${startTime.toLocaleTimeString()}`;
        } else {
          document.getElementById("timerStatus").innerText =
            "Timer not started yet.";
        }
      };

      // Capture the time difference for a race number
      function captureTime(event) {
        event.preventDefault();
        if (!startTime) {
          alert("Start the timer first!");
          return;
        }

        const raceNr = document.getElementById("raceNr").value;
        if (!raceNr) {
          alert("Enter a valid Race Nr.");
          return;
        }

        const currentTime = new Date();
        const elapsedTime = (currentTime - startTime) / 1000; // Elapsed time in seconds
        document.getElementById("elapsedTime").value = elapsedTime;

        // Submit the form
        document.getElementById("captureForm").submit();
      }
    </script>
    <script>
      // Format time in HH:MM:SS
      function formatTime(seconds) {
        const hrs = Math.floor(seconds / 3600);
        const mins = Math.floor((seconds % 3600) / 60);
        const secs = Math.floor(seconds % 60);

        // Pad with leading zeroes
        return (
          String(hrs).padStart(2, "0") +
          ":" +
          String(mins).padStart(2, "0") +
          ":" +
          String(secs).padStart(2, "0")
        );
      }

      // Capture the time difference for a race number
      function captureTime(event) {
        event.preventDefault();
        if (!startTime) {
          alert("Start the timer first!");
          return;
        }

        const raceNr = document.getElementById("raceNr").value;
        if (!raceNr) {
          alert("Enter a valid Race Nr.");
          return;
        }

        const currentTime = new Date();
        const elapsedTimeInSeconds = (currentTime - startTime) / 1000; // Elapsed time in seconds
        const elapsedTimeFormatted = formatTime(elapsedTimeInSeconds); // Format as HH:MM:SS

        // Store the formatted time in the hidden input field
        document.getElementById("elapsedTime").value = elapsedTimeFormatted;

        // Submit the form
        document.getElementById("captureForm").submit();
      }
    </script>
  </head>
  <body>
    <h1>Race Time Manager</h1>

    <!-- Start Timer -->
    <h2>Start Timer</h2>
    <button onclick="startTimer()">Start Timer</button>
    <p id="timerStatus">Timer not started yet.</p>

    <!-- Upload XLSX File -->
    <h2>Upload XLSX File</h2>
    <form action="/upload" method="post" enctype="multipart/form-data">
      <label for="file">Upload XLSX file:</label>
      <input type="file" name="file" id="file" accept=".xlsx" required />
      <button type="submit">Upload</button>
    </form>

    <!-- Capture Time -->
    <h2>Capture Time</h2>
    <form
      id="captureForm"
      action="/capture"
      method="post"
      onsubmit="captureTime(event)"
    >
      <label for="raceNr">Race Nr:</label>
      <input type="text" name="raceNr" id="raceNr" required />
      <input type="hidden" name="elapsedTime" id="elapsedTime" />
      <button type="submit">Capture</button>
    </form>

    <!-- Download Updated XLSX -->
    <h2>Download Updated File</h2>
    <form action="/download" method="get">
      <button type="submit">Download</button>
    </form>

    <!-- Display JSON Array -->
    <h2>Race Data</h2>
    <table border="1">
      <thead>
        <tr>
          <th>O/all Pos</th>
          <th>Cat Pos</th>
          <th>Time</th>
          <th>Race Nr</th>
          <th>Name</th>
          <th>Surname</th>
          <th>Team</th>
        </tr>
      </thead>
      <tbody>
        <% jsonArray.forEach((entry) => { %>
        <tr>
          <td><%= entry['O/all Pos'] %></td>
          <td><%= entry['Cat Pos'] %></td>
          <td><%= entry['Time'] %></td>
          <td><%= entry['Race Nr'] %></td>
          <td><%= entry['Name'] %></td>
          <td><%= entry['Surname'] %></td>
          <td><%= entry['Team'] %></td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </body>
</html>
